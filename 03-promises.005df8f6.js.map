{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAASC,SAASC,cAAc,SACbD,SAASC,cAAc,UAE/BC,iBAAiB,SAAS,SAACC,GAC1CA,EAAIC,iBAKJ,IAJA,IAAMC,EAAaC,SAASP,EAAOQ,SAAShB,MAAMiB,OAC5CC,EAAYH,SAASP,EAAOQ,SAASG,KAAKF,OAC1CG,EAAcL,SAASP,EAAOQ,SAASK,OAAOJ,OAE3CK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EAAG,CAGxCxB,EAFiBwB,EACHR,GAAcQ,EAAI,GAAKJ,GAElCK,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACpE6B,QAAMC,IAAI,uBAAwCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3D+B,OAAM,SAAAP,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOM,QAAQ,sBAAuCJ,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACnE6B,QAAMC,IAAI,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\nconst createPromiseBtn = document.querySelector('button');\n\ncreatePromiseBtn.addEventListener('click', (evt) => {\n  evt.preventDefault();\n  const delayValue = parseInt(formEl.elements.delay.value);\n  const stepValue = parseInt(formEl.elements.step.value);\n  const amountValue = parseInt(formEl.elements.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    const position = i;\n    const delay = delayValue + (i - 1) * stepValue;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","evt","preventDefault","delayValue","parseInt","elements","value","stepValue","step","amountValue","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.005df8f6.js.map"}